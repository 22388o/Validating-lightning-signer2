cache:
  key: lnrod-global
  paths:
    - bin/bitcoind

before_script:
  - ls -al
  - mkdir -p bin

stages:
  - build

rust-latest:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get install -y protobuf-compiler
    - rustup component add rustfmt
    - cargo build # make sure it builds without test_utils
    - cargo test --features test_utils
    # ensure vls-persist build with no-std
    - cargo build -p vls-persist --no-default-features --features no-std
    - (cd lightning-storage-server && cargo test)
    # bitcoind-client system test
    - if [ ! -e bin/bitcoind ]; then
      wget --no-verbose https://bitcoin.org/bin/bitcoin-core-0.21.0/bitcoin-0.21.0-x86_64-linux-gnu.tar.gz &&
      echo da7766775e3f9c98d7a9145429f2be8297c2672fe5b118fd3dc2411fb48e0032  bitcoin-0.21.0-x86_64-linux-gnu.tar.gz | sha256sum -c &&
      tar xzf bitcoin-0.21.0-x86_64-linux-gnu.tar.gz &&
      mv bitcoin-0.21.0/bin/bitcoind bin/ &&
      mv bitcoin-0.21.0/bin/bitcoin-cli bin/ &&
      rm -rf bitcoin-0.21.0 ;
      fi
    - ./bin/bitcoind --regtest --daemon --rpcuser=user --rpcpassword=pass && sleep 5
    - ./bin/bitcoin-cli --regtest --rpcuser=user --rpcpassword=pass getblockchaininfo
    - cargo test -p bitcoind-client --features system-test

rust-1.60.0:
  stage: build
  image: rust:1.60.0
  script:
    - apt-get update
    - apt-get install -y protobuf-compiler
    - rustup component add rustfmt
    - cargo test --features test_utils

rust-1.60.0-lss:
  stage: build
  image: rust:1.60.0
  script:
    - apt-get update
    - apt-get install -y protobuf-compiler
    - rustup component add rustfmt
    - (cd lightning-storage-server && cargo test)

embedded:
  stage: build
  image: devrandom01/rust-qemu:nightly-1-63-2022-05-16
  variables:
    RUSTFLAGS: "-C link-arg=-Tlink.x"
    CARGO_TARGET_THUMBV7M_NONE_EABI_RUNNER: "qemu-system-arm -cpu cortex-m3 -machine mps2-an385 -nographic -semihosting-config enable=on,target=native -kernel"
  script:
    - cd embedded && cargo run --release --target thumbv7m-none-eabi

wasm:
  stage: build
  image: devrandom01/rust-qemu:nightly-1-63-2022-05-16
  script:
    - cd wasm
    - wasm-pack test --firefox --headless
    - cargo test

demo-signer:
  stage: build
  image: devrandom01/rust-qemu:nightly-1-63-2022-05-16
  script:
    - cd vls-signer-stm32 && cargo build --features stm32f412 --release --bin demo_signer

coverage:
  stage: build
  image: rust:latest
  before_script:
    - rustup component add rustfmt
    - cargo install cargo-kcov
    - apt-get update
    - apt-get install -y cmake g++ pkg-config jq
    - apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev binutils-dev libiberty-dev
    - cargo kcov --print-install-kcov-sh | sh
  script:
    - cd vls-core && CARGO_TARGET_DIR=target/kcov cargo kcov --verbose --lib --features test_utils -- --verify --exclude-pattern=/home/user/.cargo,/usr/include,/usr/src/debug,src/util/loopback.rs,src/util/functional_test_util.rs
  after_script:
    - bash <(curl -s https://codecov.io/bash) -t "${CODECOV_TOKEN}"

cargo-audit:
  stage: build
  image: rust:latest
  script:
    - rustup component add rustfmt
    - cargo install cargo-audit
    - cargo audit
    - (cd lightning-storage-server && cargo audit)

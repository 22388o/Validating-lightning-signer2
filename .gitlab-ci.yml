stages:
  - build

rust-latest:
  stage: build
  image: rust:latest
  script:
    - (cd lightning-signer-core && cargo build --no-default-features --features=std)  # make sure it builds without test_utils enabled
    - cargo build
    - cargo test

# match MSRV for (parts of) rust-lightning
rust-1.45.2:
  stage: build
  image: rust:1.45.2
  script:
    - (cd lightning-signer-core && cargo build --no-default-features --features=std)  # make sure it builds without test_utils enabled
    - (cd lightning-signer-core && cargo build && cargo test)

# rust version in Debian bullseye
rust-1.58.0:
  stage: build
  image: rust:1.48.0
  script:
    - (cd lightning-signer-core && cargo build --no-default-features --features=std)  # make sure it builds without test_utils enabled
    - cargo build
    - cargo test

embedded:
  stage: build
  image: devrandom01/rust-qemu:nightly
  variables:
    RUSTFLAGS: "-C link-arg=-Tlink.x"
    CARGO_TARGET_THUMBV7M_NONE_EABI_RUNNER: "qemu-system-arm -cpu cortex-m3 -machine mps2-an385 -nographic -semihosting-config enable=on,target=native -kernel"
  script:
    - cd embedded && cargo run --release --target thumbv7m-none-eabi

wasm:
  stage: build
  image: devrandom01/rust-qemu:nightly
  script:
    - cd wasm
    - wasm-pack test --firefox --headless
    - cargo test

coverage:
  stage: build
  image: rust:latest
  before_script:
    - rustup component add rustfmt
    - cargo install cargo-kcov
    - apt-get update
    - apt-get install -y cmake g++ pkg-config jq
    - apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev binutils-dev libiberty-dev
    - cargo kcov --print-install-kcov-sh | sh
  script:
    - cd lightning-signer-core && CARGO_TARGET_DIR=target/kcov cargo kcov --verbose --lib -- --verify --exclude-pattern=/home/user/.cargo,/usr/include,/usr/src/debug,src/util/loopback.rs,src/util/functional_test_util.rs
  after_script:
    - bash <(curl -s https://codecov.io/bash) -t "${CODECOV_TOKEN}"

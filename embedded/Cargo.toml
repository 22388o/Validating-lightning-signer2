[package]
authors = ["Dev Random <c1.devrandom@niftybox.net>"]
edition = "2018"
readme = "README.md"
name = "embedded"
version = "0.1.0"

[features]
default = ["device"]
device = ["cortex-m", "cortex-m-rt", "cortex-m-semihosting", "alloc-cortex-m", "lightning-signer-core/no-std", "lightning-signer-core/secp-lowmemory"]
std = ["lightning-signer-core/std"]

[dependencies]
cortex-m = { version = "0.6.0", optional = true }
cortex-m-rt = { version = "0.6.10", optional = true }
cortex-m-semihosting = { version = "0.3.3", optional = true }
alloc-cortex-m = { version = "0.4.1", optional = true }

lightning-signer-core = { path="../lightning-signer-core", default-features = false }

[patch.crates-io]
# See also https://github.com/rust-bitcoin/rust-secp256k1/pull/299 and https://github.com/bitcoin-core/secp256k1/pull/956

# Uncomment this line to use a low-memory version of secp256k1 with static precomputation
#secp256k1 = { git = "https://github.com/devrandom/rust-secp256k1.git", rev = "4e745ebe7e4c9cd0a7e9c8d5c42e989522e52f71" }

[[bin]]
name = "embedded"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # reduce flash size

[profile.dev]
opt-level = "s" # reduce flash size
lto = true # reduce flash size

[profile.test]
lto = false # workaround LLVM bug
